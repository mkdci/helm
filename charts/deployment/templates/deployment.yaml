apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "deployment.fullname" . }}
  labels:
    {{- include "deployment.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      {{- include "deployment.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        config-hash:  {{ keys .Values.env | join "-" | sha256sum }}{{ values .Values.env | join "-" | sha256sum }}{{ keys .Values.sec | join "-" | sha256sum }}{{ values .Values.sec | join "-" | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "deployment.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "deployment.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}@{{ .Values.image.digest }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
           httpGet:
             path: /liveness
             port: http
          readinessProbe:
           httpGet:
             path: /readiness
             port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.env }}
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value  | quote }}
            {{- end }}
            {{- if .Values.sec }}
            {{- range $key, $value := .Values.sec }}
            - name: {{ $key }}_FILE
              value: /etc/secrets/{{ $key }}
            {{- end }}
            - name: FILE_ENV_VARS
              value: {{ keys .Values.sec | join " " }}
            {{- end }}
          {{- end }}
          {{- if .Values.sec }}
          volumeMounts:
            - name: {{ include "deployment.fullname" . | kebabcase }}
              mountPath: /etc/secrets
              readOnly: true
          {{- end }}
        {{- if .Values.exporter.enabled }}
        - name: {{ .Chart.Name }}-exporter
          image: "{{.Values.exporter.image.repository}}:{{.Values.exporter.image.tag}}"
          ports:
            - name: exporter
              containerPort: {{ .Values.exporter.service.port }}
        {{- end }}
      {{- if .Values.sec }}
      volumes:
        - name: {{ include "deployment.fullname" . | kebabcase }}
          secret:
            secretName: {{ include "deployment.fullname" . | kebabcase }}
            optional: false
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
